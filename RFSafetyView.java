    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        YesRadioButton = new javax.swing.JRadioButton();
        NoRadioButton = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        CalculateButton = new javax.swing.JButton();
        PowerTextField = new javax.swing.JTextField();
        GainTextField = new javax.swing.JTextField();
        DistanceTextField = new javax.swing.JTextField();
        FrequencyTextField = new javax.swing.JTextField();
        ControlledMPELabel = new javax.swing.JLabel();
        UncontrolledMPELabel = new javax.swing.JLabel();
        ControlledDistanceLabel = new javax.swing.JLabel();
        UncontrolledDistanceLabel = new javax.swing.JLabel();
        ControlledComplianceLabel = new javax.swing.JLabel();
        UncontrolledComplianceLabel = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        PowerDensityLabel = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        buttonGroup1 = new javax.swing.ButtonGroup();

        mainPanel.setName("mainPanel"); // NOI18N

        buttonGroup1.add(YesRadioButton);
        YesRadioButton.setMnemonic('y');
        YesRadioButton.setSelected(true);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(rfsafety.RFSafetyApp.class).getContext().getResourceMap(RFSafetyView.class);
        YesRadioButton.setText(resourceMap.getString("YesRadioButton.text")); // NOI18N
        YesRadioButton.setName("YesRadioButton"); // NOI18N

        buttonGroup1.add(NoRadioButton);
        NoRadioButton.setMnemonic('n');
        NoRadioButton.setText(resourceMap.getString("NoRadioButton.text")); // NOI18N
        NoRadioButton.setName("NoRadioButton"); // NOI18N

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N

        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N

        jLabel9.setText(resourceMap.getString("jLabel9.text")); // NOI18N
        jLabel9.setName("jLabel9"); // NOI18N

        jLabel10.setText(resourceMap.getString("jLabel10.text")); // NOI18N
        jLabel10.setName("jLabel10"); // NOI18N

        CalculateButton.setMnemonic('c');
        CalculateButton.setText(resourceMap.getString("CalculateButton.text")); // NOI18N
        CalculateButton.setName("CalculateButton"); // NOI18N
        CalculateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CalculateButtonActionPerformed(evt);
            }
        });

        PowerTextField.setText(resourceMap.getString("PowerTextField.text")); // NOI18N
        PowerTextField.setName("PowerTextField"); // NOI18N

        GainTextField.setText(resourceMap.getString("GainTextField.text")); // NOI18N
        GainTextField.setName("GainTextField"); // NOI18N

        DistanceTextField.setText(resourceMap.getString("DistanceTextField.text")); // NOI18N
        DistanceTextField.setName("DistanceTextField"); // NOI18N

        FrequencyTextField.setText(resourceMap.getString("FrequencyTextField.text")); // NOI18N
        FrequencyTextField.setName("FrequencyTextField"); // NOI18N

        ControlledMPELabel.setText(resourceMap.getString("ControlledMPELabel.text")); // NOI18N
        ControlledMPELabel.setName("ControlledMPELabel"); // NOI18N

        UncontrolledMPELabel.setText(resourceMap.getString("UncontrolledMPELabel.text")); // NOI18N
        UncontrolledMPELabel.setName("UncontrolledMPELabel"); // NOI18N

        ControlledDistanceLabel.setText(resourceMap.getString("ControlledDistanceLabel.text")); // NOI18N
        ControlledDistanceLabel.setName("ControlledDistanceLabel"); // NOI18N

        UncontrolledDistanceLabel.setText(resourceMap.getString("UncontrolledDistanceLabel.text")); // NOI18N
        UncontrolledDistanceLabel.setName("UncontrolledDistanceLabel"); // NOI18N

        ControlledComplianceLabel.setText(resourceMap.getString("ControlledComplianceLabel.text")); // NOI18N
        ControlledComplianceLabel.setName("ControlledComplianceLabel"); // NOI18N

        UncontrolledComplianceLabel.setText(resourceMap.getString("UncontrolledComplianceLabel.text")); // NOI18N
        UncontrolledComplianceLabel.setName("UncontrolledComplianceLabel"); // NOI18N

        jLabel17.setText(resourceMap.getString("jLabel17.text")); // NOI18N
        jLabel17.setName("jLabel17"); // NOI18N

        jLabel18.setText(resourceMap.getString("jLabel18.text")); // NOI18N
        jLabel18.setName("jLabel18"); // NOI18N

        jLabel19.setText(resourceMap.getString("jLabel19.text")); // NOI18N
        jLabel19.setName("jLabel19"); // NOI18N

        PowerDensityLabel.setText(resourceMap.getString("PowerDensityLabel.text")); // NOI18N
        PowerDensityLabel.setName("PowerDensityLabel"); // NOI18N

        jLabel21.setText(resourceMap.getString("jLabel21.text")); // NOI18N
        jLabel21.setName("jLabel21"); // NOI18N


    private void CalculateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CalculateButtonActionPerformed
        // PWR = 1000 * WATTS
        double pwr=1000*Double.parseDouble(PowerTextField.getText());
        // EIRP = PWR * (10 ^ (GAIN / 10))
        double eirp=pwr*Math.pow(10, (Double.parseDouble(GainTextField.getText())/10));
        // DX = FT * 30.48
        double dx=Double.parseDouble(DistanceTextField.getText())*30.48;
        /*  260 IF F<1.34 THEN STD1=100:STD2=100:GOTO 330
            270 IF F<3 THEN STD1=100:STD2=180/((F)^2):GOTO 330
            280 IF F<30 THEN STD1=900/((F)^2):STD2=180/((F)^2):GOTO 330
            290 IF F<300 THEN STD1=1:STD2=.2:GOTO 330
            300 IF F<1500 THEN STD1=F/300:STD2=F/1500:GOTO 330
            310 IF F<100000! THEN STD1=5:STD2=1:GOTO 330 */
        double f=Double.parseDouble(FrequencyTextField.getText());
        double std1, std2;
        if (f < 1.34) {
            std1=100;
            std2=100;
        } else if (f < 3) {
            std1=100;
            std2=180/(Math.pow(f,2));
        } else if (f < 30) {
            std1=900/(Math.pow(f,2));
            std2=180/(Math.pow(f,2));
        } else if (f < 300) {
            std1=1;
            std2=.2;
        } else if (f < 1500) {
            std1=f/300;
            std2=f/1500;
        } else if (f < 100000) {
            std1=5;
            std2=1;
        } else {                   
            //  320 PRINT "THE FCC DOES NOT HAVE EXPOSURE LIMITS ABOVE 100 GHZ":GOTO 250
            std1=0;
            std2=0;
        }
        /*  370 GF=.25:GR$="WITHOUT":IF G$="Y" THEN GF=.64:GR$="WITH"
            380 IF G$="y" THEN GF=.64:GR$="WITH" */
        double gf=.25;
        if (YesRadioButton.isSelected()) gf=.64;
        //  390 PWRDENS = (GF * EIRP) / (3.14159 * (DX ^ 2))
        double pwrdens=(gf*eirp)/(Math.PI*Math.pow(dx,2));
        //  400 PWRDENS=(INT((PWRDENS*10000)+.5))/10000
        //  410 DX1=SQR((GF*EIRP)/(STD1*3.14159)):DX1=DX1/30.48:DX1=(INT((DX1*10)+.5))/10
        double dx1=(Math.sqrt((gf*eirp)/(std1*Math.PI)))/30.48;
        //  420 DX2=SQR((GF*EIRP)/(STD2*3.14159)):DX2=DX2/30.48:DX2=(INT((DX2*10)+.5))/10
        double dx2=(Math.sqrt((gf*eirp)/(std2*Math.PI)))/30.48;
        //  430 STD1=(INT((STD1*100)+.5))/100:STD2=(INT((STD2*100)+.5))/100               
        //  450 PRINT "FROM THE ANTENNA CENTER THE ESTIMATED POWER DENSITY IS";PWRDENS;"MW/CM2.":PRINT
        PowerDensityLabel.setText(Double.toString(pwrdens));
        //  460 PRINT "AT";F;"MHZ, THE MAXIMUM PERMISSIBLE EXPOSURE (MPE) IN `CONTROLLED"
        //  470 PRINT "ENVIRONMENTS' (SUCH AS YOUR OWN HOUSEHOLD OR CAR) IS"; STD1; "MW/CM2."
        ControlledMPELabel.setText(Double.toString(std1));
        //  480 PRINT "THE MPE IN `UNCONTROLLED ENVIRONMENTS' (SUCH AS NEIGHBORS' PROPERTY)"
        //  490 PRINT "IS"; STD2; "MW/CM2.  THIS INSTALLATION WOULD MEET THE CONTROLLED MPE"
        UncontrolledMPELabel.setText(Double.toString(std2));
        //  500 PRINT "LIMIT AT";DX1;"FEET AND THE UNCONTROLLED LIMIT AT";DX2;"FEET."
        ControlledDistanceLabel.setText(Double.toString(dx1));
        UncontrolledDistanceLabel.setText(Double.toString(dx2));
        if ((dx/30.48) > dx1) ControlledComplianceLabel.setText("Yes");
            else ControlledComplianceLabel.setText("No");        
        if ((dx/30.48) > dx2) UncontrolledComplianceLabel.setText("Yes");
            else UncontrolledComplianceLabel.setText("No");        
        
    }//GEN-LAST:event_CalculateButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CalculateButton;
    private javax.swing.JLabel ControlledComplianceLabel;
    private javax.swing.JLabel ControlledDistanceLabel;
    private javax.swing.JLabel ControlledMPELabel;
    private javax.swing.JTextField DistanceTextField;
    private javax.swing.JTextField FrequencyTextField;
    private javax.swing.JTextField GainTextField;
    private javax.swing.JRadioButton NoRadioButton;
    private javax.swing.JLabel PowerDensityLabel;
    private javax.swing.JTextField PowerTextField;
    private javax.swing.JLabel UncontrolledComplianceLabel;
    private javax.swing.JLabel UncontrolledDistanceLabel;
    private javax.swing.JLabel UncontrolledMPELabel;
    private javax.swing.JRadioButton YesRadioButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    // End of variables declaration//GEN-END:variables
}
